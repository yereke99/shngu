# main.py
import sys
import os
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from styles import get_style
from utils import is_dark_mode, load_image

class PumpDiagApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.current_image = None
        self.init_ui()
        self.apply_theme()
        
    def init_ui(self):
        self.setWindowTitle('AI-PumpDiag - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –®–ì–ù–£')
        self.setGeometry(100, 100, 1200, 800)
        self.setWindowIcon(QIcon('assets/icon.png') if os.path.exists('assets/icon.png') else QIcon())
        
        # Central widget
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # Main layout
        main_layout = QHBoxLayout(central_widget)
        
        # Left panel
        left_panel = self.create_left_panel()
        main_layout.addWidget(left_panel, 1)
        
        # Right panel (image display)
        right_panel = self.create_right_panel()
        main_layout.addWidget(right_panel, 2)
        
    def create_left_panel(self):
        panel = QWidget()
        panel.setMaximumWidth(400)
        layout = QVBoxLayout(panel)
        
        # Title
        title = QLabel('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å–æ—Å–∞')
        title.setObjectName('title')
        layout.addWidget(title)
        
        # File upload section
        upload_group = QGroupBox('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö / –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –∂“Ø–∫—Ç–µ—É')
        upload_layout = QVBoxLayout(upload_group)
        
        self.file_label = QLabel('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω / –§–∞–π–ª —Ç–∞“£–¥–∞–ª–º–∞“ì–∞–Ω')
        self.file_label.setObjectName('fileLabel')
        upload_layout.addWidget(self.file_label)
        
        upload_btn = QPushButton('üìÅ –í—ã–±—Ä–∞—Ç—å –¥–∏–Ω–∞–º–æ–≥—Ä–∞–º–º—É')
        upload_btn.setObjectName('primaryBtn')
        upload_btn.clicked.connect(self.load_file)
        upload_layout.addWidget(upload_btn)
        
        layout.addWidget(upload_group)
        
        # Analysis section
        analysis_group = QGroupBox('–ê–Ω–∞–ª–∏–∑ / –¢–∞–ª–¥–∞—É')
        analysis_layout = QVBoxLayout(analysis_group)
        
        analyze_btn = QPushButton('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å')
        analyze_btn.setObjectName('primaryBtn')
        analyze_btn.clicked.connect(self.analyze_graph)
        analysis_layout.addWidget(analyze_btn)
        
        # Results
        self.result_label = QLabel('–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å\n–¢–∞–ª–¥–∞—É –Ω”ô—Ç–∏–∂–µ—Å—ñ –æ—Å—ã–Ω–¥–∞ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ–¥—ñ')
        self.result_label.setObjectName('resultLabel')
        self.result_label.setWordWrap(True)
        analysis_layout.addWidget(self.result_label)
        
        layout.addWidget(analysis_group)
        
        # Recommendations
        rec_group = QGroupBox('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ / “∞—Å—ã–Ω—ã—Å—Ç–∞—Ä')
        rec_layout = QVBoxLayout(rec_group)
        
        self.rec_text = QTextEdit()
        self.rec_text.setObjectName('recText')
        self.rec_text.setMaximumHeight(200)
        self.rec_text.setPlaceholderText('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞...\n“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä —Ç–∞–ª–¥–∞—É–¥–∞–Ω –∫–µ–π—ñ–Ω –∫”©—Ä—Å–µ—Ç—ñ–ª–µ–¥—ñ...')
        rec_layout.addWidget(self.rec_text)
        
        layout.addWidget(rec_group)
        
        layout.addStretch()
        
        # Theme toggle
        theme_btn = QPushButton('üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞')
        theme_btn.setObjectName('secondaryBtn')
        theme_btn.clicked.connect(self.toggle_theme)
        layout.addWidget(theme_btn)
        
        return panel
        
    def create_right_panel(self):
        panel = QWidget()
        layout = QVBoxLayout(panel)
        
        # Image display
        self.image_label = QLabel()
        self.image_label.setObjectName('imageDisplay')
        self.image_label.setAlignment(Qt.AlignCenter)
        self.image_label.setText('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∏–Ω–∞–º–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è\n–î–∏–Ω–∞–º–æ–≥—Ä–∞–º–º–∞–Ω—ã –∂“Ø–∫—Ç–µ—É “Ø—à—ñ–Ω –∫”©—Ä—Å–µ—Ç—É')
        self.image_label.setMinimumHeight(400)
        
        scroll_area = QScrollArea()
        scroll_area.setWidget(self.image_label)
        scroll_area.setWidgetResizable(True)
        layout.addWidget(scroll_area)
        
        return panel
        
    def load_file(self):
        file_path, _ = QFileDialog.getOpenFileName(
            self, 
            '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–Ω–∞–º–æ–≥—Ä–∞–º–º—É / –î–∏–Ω–∞–º–æ–≥—Ä–∞–º–º–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑',
            '',
            'Images (*.png *.jpg *.jpeg *.bmp);;All Files (*)'
        )
        
        if file_path:
            self.current_image = load_image(file_path)
            if self.current_image:
                self.display_image(self.current_image)
                self.file_label.setText(f'–ó–∞–≥—Ä—É–∂–µ–Ω–æ: {os.path.basename(file_path)}')
            else:
                QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
                
    def display_image(self, pixmap):
        scaled_pixmap = pixmap.scaled(
            self.image_label.size(), 
            Qt.KeepAspectRatio, 
            Qt.SmoothTransformation
        )
        self.image_label.setPixmap(scaled_pixmap)
        
    def analyze_graph(self):
        if not self.current_image:
            QMessageBox.warning(self, '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∏–Ω–∞–º–æ–≥—Ä–∞–º–º—É')
            return
            
        # Simple mock analysis
        self.result_label.setText('‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω\n‚úÖ –¢–∞–ª–¥–∞—É –∞—è“õ—Ç–∞–ª–¥—ã')
        
        # Mock recommendations based on your document
        recommendations = """–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –ø—Ä–∏—Ç–æ–∫ –∂–∏–¥–∫–æ—Å—Ç–∏
–¢–∞–±—ã–ª–¥—ã: –°“±–π—ã“õ—Ç—ã“õ—Ç—ã“£ –∂–µ—Ç–∫—ñ–ª—ñ–∫—Å—ñ–∑ –∞“ì—ã–º—ã

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ—Å—Ç—å –∑–∞—Ç—Ä—É–±–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å –¥–µ–±–∏—Ç –ø—Ä–∏—Ç–æ–∫–∞  
‚Ä¢ –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É —Ö–æ–¥–∞ –∏ –¥–∞–≤–ª–µ–Ω–∏–µ –∑–∞–±–æ—è

“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä:
‚Ä¢ “ö“±–±—ã—Ä –∞—Å—Ç—ã–Ω–¥–∞“ì—ã –∫–µ“£—ñ—Å—Ç—ñ–∫—Ç—ñ“£ —Ç—ã“ì—ã–∑–¥—ã“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä—É
‚Ä¢ –ê“ì—ã–Ω –¥–µ–±–∏—Ç—ñ–Ω –∞—Ä—Ç—Ç—ã—Ä—É
‚Ä¢ –ñ“Ø—Ä—É –∂–∏—ñ–ª—ñ–≥—ñ –º–µ–Ω —Ç“Ø–±—ñ–Ω–¥–µ–≥—ñ “õ—ã—Å—ã–º–¥—ã —Ç“Ø–∑–µ—Ç—É"""
        
        self.rec_text.setText(recommendations)
        
    def toggle_theme(self):
        # This is a simplified theme toggle
        self.apply_theme(not is_dark_mode())
        
    def apply_theme(self, dark=None):
        if dark is None:
            dark = is_dark_mode()
        self.setStyleSheet(get_style(dark))
